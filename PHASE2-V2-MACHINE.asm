		ORG 00H

START_MACHINE:
	MOV R0,#30H		; POINT TO START OF RECIEVED MESSAGE
	MOV R1,#50H		; STORE RESULT
	CLR A
	MOV A,@R0
	CJNE R0,#1,ENCRYPT	;IF R0 NOT 1 JMP TO ENCRYPT PROCEDURE

DECRYPT:
	SJMP CHECKEND	; CHECK IF AT END OF MSG
CONTEN:					; CONT. DECRYPTING
	ACALL SHIFTRIGHT
DECRESULT:			; STORE RESULT OF DECRYPTION
	MOV @R1,A			; STORE RESULT IN RAM
	INC R1				; INC TO STORE IN NEXT RAM LOCATION
	INC R0				; POINT TO NEXT CHAR
	CLR A
	MOV A,@R0	; FETCH NEXT CHAR
	SJMP DECRYPT

SHIFTRIGHT:
	CJNE A,#58H,NOTX
	MOV A,#41H
	RET
NOTX:	CJNE A,#59H,NOTY
	MOV A,#42H
	RET
NOTY:	CJNE A,#5AH,NOTZ
	MOV A,#43H
	RET
NOTZ:	CJNE A,#78H,LNOTy
	MOV A,#61H
	RET
LNOTy:	CJNE A,#79H,LNOTx
	MOV A,#62H
	RET
LNOTx:	CJNE A,#7AH,LNOTz
	MOV A,#63H
	RET
LNOTz:
	ADD A,#3H
	RET

ENCRYPT:
	SJMP CHECKEND	; CHECK IF AT END OF MSG
CONTDE:					; CONT. ENCRYPTING
	ACALL SHIFTLEFT
ENCRESULT:			; STORE RESULT OF ENCRYPTION
	MOV @R1,A			; STORE RESULT IN RAM
	INC R1				; INC TO STORE IN NEXT RAM LOCATION
	INC R0				; POINT TO NEXT CHAR
	CLR A
	MOV A,@R0	; FETCH NEXT CHAR
	SJMP ENCRYPT

SHIFTLEFT:
	CJNE A,#41H,NOTA
	MOV A,#58H
	RET
NOTA:	CJNE A,#42H,NOTB
	MOV A,#59H
	RET
NOTB:	CJNE A,#43H,NOTC
	MOV A,#5AH
	RET
NOTC:	CJNE A,#61H,LNOTa
	MOV A,#78H
	RET
LNOTa:	CJNE A,#62H,LNOTb
	MOV A,#79H
	RET
LNOTb:	CJNE A,#63H,LNOTc
	MOV A,#7aH
	RET
LNOTc:
	CLR C				; CLEAR CARRY TO MAKE SURE IT IS NOT INCLUDED IN  THE CALCULATION
	SUBB A,#3H
	RET

CHARSPACE:			; IF THE CHARACTER IS SPACE
	MOV @R1,A			; STORE RESULT IN RAM
	INC R1				; INC TO STORE IN NEXT RAM LOCATION
	INC R0				; POINT TO NEXT CHAR
	CLR A
	MOV A,@R0		; FETCH NEXT CHAR
	CJNE R0,#1,ENCRYPT		; JMP TO  ENCRYPTION
	SJMP DECRYPT				; JMP TO  DECRYPTION

CHECKEND:	
	CJNE A,#23H,CHECKSPACE
	SJMP FINISH        ; REACHED END

CHECKSPACE:						; NOT AT END, IS IT A SPACE?
	CJNE A,#20H,CONT
	SJMP CHARSPACE
CONT:
	CJNE R0,#1,CONTEN		; CONTINUE ENCRYPTION
	SJMP CONTDE				; CONTINUE DECRYPTION
FINISH:
	SJMP FINISH

;----------END OF PROCEDURES----------


END